name: Publish Docker Image

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "master" ]

env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  REPOSITORY: aelf-rd
  REPOSITORY_REGION: us-central1


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    strategy:
      matrix:
        include:
          - service: "dbmigrator"
            name: "DeFiPulse.DbMigrator"
          - service: "web"
            name: "DeFiPulse.Web"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Create image tag
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REPOSITORY_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}-${{ matrix.service }}
          tags: |
            type=sha

      #
      # Authenticate to Google Cloud using workload identity federation
      #
      - id: 'auth'
        name: 'Obtain access token by using workload identity federation'
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: "access_token"
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REPOSITORY_REGION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          build-args: |
            servicename=${{ matrix.name }}

